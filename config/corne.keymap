/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>

#define HRA &mt LGUI A
#define HRS &mt LALT S
#define HRD &mt LCTRL D
#define HRF &mt LSHIFT F
#define HRJ &mt RSHIFT J
#define HRK &mt RCTRL K
#define HRL &mt LALT L
#define HRSC &mt RGUI SEMI

#define LMO &lt 1 ESC
#define LNU &lt 2 SPACE
#define LMV &lt 3 TAB
#define LSY &lt 4 RET
#define LAC &lt 5 BSPC
#define LFN &lt 6 DEL

#define KCEDIL &kp RA(COMMA)

#define MLEFT &mmv MOVE_LEFT
#define MDOWN &mmv MOVE_DOWN
#define MUP &mmv MOVE_UP
#define MRIGHT &mmv MOVE_RIGHT
#define MSDOWN &msc SCRL_DOWN
#define MSUP &msc SCRL_UP

#define SDOWN &kp C_VOL_DN
#define SUP &kp C_VOL_UP
#define SMUTE &kp C_MUTE


/ {
    combos {
        compatible = "zmk,combos";
        combo_caps {
            timeout-ms = <50>;
            key-positions = <16 19>;
            bindings = <&caps_word>;
        };
        combo_esc {
            timeout-ms = <50>;
            key-positions = <19 20>;
            bindings = <&kp ESC>;
        };
    };
    behaviors {
        mt: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            quick-tap-ms = <200>;
        };
        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            quick-tap-ms = <200>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
   &none &kp Q      &kp W       &kp E       &kp R       &kp T       &kp Y       &kp U       &kp I       &kp O       &kp P       &none
   &none HRA        HRS         HRD         HRF         &kp G       &kp H       HRJ         HRK         HRL         HRSC        &none
   &none &kp Z      &kp X       &kp C       &kp V       &kp B       &kp N       &kp M       &kp COMMA   &kp DOT     &kp FSLH    &none
                                LMO         LNU         LMV         LSY         LAC         LFN
            >;
        };
        mod_layer {
            bindings = <
   &trans &trans    &trans     &trans       &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans
   &trans &trans    &trans     &trans       &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans
   &trans &trans    &trans     &trans       &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans
                               &trans       &trans      &trans      &trans      &trans      &trans
            >;
        };
        number_layer {
            bindings = <
   &trans &trans    &trans     &trans       &trans      &trans      &kp PLUS    &kp KP_N7   &kp KP_N8   &kp KP_N9   &kp STAR    &trans
   &trans &trans    &trans     &trans       &trans      &trans      &kp MINUS   &kp KP_N4   &kp KP_N5   &kp KP_N6   &kp EQUAL   &trans
   &trans &trans    &trans     &trans       &trans      &trans      &kp UNDER   &kp KP_N1   &kp KP_N2   &kp KP_N3   &kp SLASH   &trans
                               &trans       &trans      &trans      &kp COMMA   &kp KP_N0   &kp DOT
            >;
        };
        move_layer {
            bindings = <
   &trans &trans    &trans     &trans       &trans      &trans      MLEFT       MDOWN       MUP         MRIGHT      &kp PSCRN  &trans
   &trans &trans    &trans     &trans       &trans      &trans      &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   MSUP       &trans
   &trans &trans    &trans     &trans       &trans      &trans      &kp HOME    &kp PG_DN   &kp PG_UP   &kp END     MSDOWN     &trans
                               &trans       &trans      &trans      &mkp LCLK   &mkp MCLK   &mkp RCLK
            >;
        };
        symbol_layer {
            bindings = <
   &trans &kp EXCL  &kp AT     &kp HASH     &kp DLLR    &kp PRCNT   &trans      &trans      &trans      &trans      &trans      &trans
   &trans &kp AMPS  &kp LT     &kp GT       &kp LPAR    &kp RPAR    &trans      &trans      &trans      &trans      &trans      &trans
   &trans &kp BSLH  &kp LBKT   &kp RBKT     &kp LBRC    &kp RBRC    &trans      &trans      &trans      &trans      &trans      &trans
                               &kp COLON    &kp MINUS   &kp EQUAL   &trans      &trans      &trans
            >;
        };
        accent_layer {
            bindings = <
   &trans &trans    &kp CARET  &trans       &kp GRAVE   &trans      &trans      &trans      &trans      &trans      &trans      &trans
   &trans &trans    &kp TILDE  &kp DQT      &kp SQT     &trans      &trans      &trans      &trans      &trans      &trans      &trans
   &trans &trans    &trans     KCEDIL       &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans
                               &trans       &trans      &trans      &trans      &trans      &trans
            >;
        };
        function_layer {
            bindings = <
   &trans &kp F1    &kp F2     &kp F3       &kp F4      &kp INS     &kp KP_NUM  SDOWN       SUP         SMUTE       &trans      &trans
   &trans &kp F5    &kp F6     &kp F7       &kp F8      &caps_word  &trans      &trans      &trans      &trans      &trans      &trans
   &trans &kp F9    &kp F10    &kp F11      &kp F12     &kp CAPS    &trans      &bt BT_NXT  &bt BT_PRV  &bt BT_CLR  &bt BT_DISC &trans
                               &kp KP_NUM   &trans      &trans      &trans      &trans      &trans
            >;
        };
        cp_layer {
            bindings = <
   &trans &trans    &trans     &trans       &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans
   &trans &trans    &trans     &trans       &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans
   &trans &trans    &trans     &trans       &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans
                               &trans       &trans      &trans      &trans      &trans      &trans
            >;
        };
    };
};
